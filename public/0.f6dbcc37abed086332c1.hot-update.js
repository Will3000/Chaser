webpackHotUpdate(0,{

/***/ 470:
/***/ (function(module, exports, __webpack_require__) {

	eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(471), __webpack_require__(474), __webpack_require__(476), __webpack_require__(13), __webpack_require__(169), __webpack_require__(475), __webpack_require__(478), __webpack_require__(427)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./GoogleApiComponent'), require('./components/Marker'), require('./components/InfoWindow'), require('react'), require('react-dom'), require('./lib/String'), require('./lib/cancelablePromise'), require('invariant'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.GoogleApiComponent, global.Marker, global.InfoWindow, global.react, global.reactDom, global.String, global.cancelablePromise, global.invariant);\n    global.index = mod.exports;\n  }\n})(this, function (exports, _GoogleApiComponent, _Marker, _InfoWindow, _react, _reactDom, _String, _cancelablePromise, _invariant) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Map = exports.InfoWindow = exports.Marker = exports.GoogleApiWrapper = undefined;\n  Object.defineProperty(exports, 'GoogleApiWrapper', {\n    enumerable: true,\n    get: function () {\n      return _GoogleApiComponent.wrapper;\n    }\n  });\n  Object.defineProperty(exports, 'Marker', {\n    enumerable: true,\n    get: function () {\n      return _Marker.Marker;\n    }\n  });\n  Object.defineProperty(exports, 'InfoWindow', {\n    enumerable: true,\n    get: function () {\n      return _InfoWindow.InfoWindow;\n    }\n  });\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _invariant2 = _interopRequireDefault(_invariant);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var mapStyles = {\n    container: {\n      position: 'absolute',\n      width: '100vw',\n      height: '100vh'\n    },\n    map: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    }\n  };\n\n  var evtNames = ['ready', 'click', 'dragend', 'recenter'];\n\n  var Map = exports.Map = function (_React$Component) {\n    _inherits(Map, _React$Component);\n\n    function Map(props) {\n      _classCallCheck(this, Map);\n\n      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Map).call(this, props));\n\n      (0, _invariant2.default)(props.hasOwnProperty('google'), 'You must include a `google` prop.');\n\n      _this.listeners = {};\n      _this.state = {\n        currentLocation: {\n          lat: _this.props.initialCenter.lat,\n          lng: _this.props.initialCenter.lng\n        }\n      };\n      return _this;\n    }\n\n    _createClass(Map, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        if (this.props.centerAroundCurrentLocation) {\n          if (navigator && navigator.geolocation) {\n            this.geoPromise = (0, _cancelablePromise.makeCancelable)(new Promise(function (resolve, reject) {\n              navigator.geolocation.getCurrentPosition(resolve, reject);\n            }));\n\n            this.geoPromise.promise.then(function (pos) {\n              var coords = pos.coords;\n              _this2.setState({\n                currentLocation: {\n                  lat: coords.latitude,\n                  lng: coords.longitude\n                }\n              });\n            }).catch(function (e) {\n              return e;\n            });\n          }\n        }\n        this.loadMap();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n          this.loadMap();\n        }\n        if (this.props.visible !== prevProps.visible) {\n          this.restyleMap();\n        }\n        if (this.props.zoom !== prevProps.zoom) {\n          this.map.setZoom(this.props.zoom);\n        }\n        if (this.props.center !== prevProps.center) {\n          this.setState({\n            currentLocation: this.props.center\n          });\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n          this.recenterMap();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        var _this3 = this;\n\n        var google = this.props.google;\n\n        if (this.geoPromise) {\n          this.geoPromise.cancel();\n        }\n        Object.keys(this.listeners).forEach(function (e) {\n          google.maps.event.removeListener(_this3.listeners[e]);\n        });\n      }\n    }, {\n      key: 'loadMap',\n      value: function loadMap() {\n        var _this4 = this;\n\n        if (this.props && this.props.google && this._mapRef) {\n          (function () {\n            var google = _this4.props.google;\n\n            var maps = google.maps;\n\n            var mapRef = _this4._mapRef;\n            var node = _reactDom2.default.findDOMNode(mapRef);\n            var curr = _this4.state.currentLocation;\n            var center = new maps.LatLng(curr.lat, curr.lng);\n\n            var mapTypeIds = _this4.props.google.maps.MapTypeId || {};\n            var mapTypeFromProps = String(_this4.props.mapType).toUpperCase();\n\n            var mapConfig = Object.assign({}, {\n              mapTypeId: mapTypeIds[mapTypeFromProps],\n              center: center,\n              zoom: _this4.props.zoom,\n              maxZoom: _this4.props.maxZoom,\n              minZoom: _this4.props.maxZoom,\n              clickableIcons: _this4.props.clickableIcons,\n              disableDefaultUI: _this4.props.disableDefaultUI,\n              zoomControl: _this4.props.zoomControl,\n              mapTypeControl: _this4.props.mapTypeControl,\n              scaleControl: _this4.props.scaleControl,\n              streetViewControl: _this4.props.streetViewControl,\n              panControl: _this4.props.panControl,\n              rotateControl: _this4.props.rotateControl,\n              scrollwheel: _this4.props.scrollwheel,\n              draggable: _this4.props.draggable,\n              keyboardShortcuts: _this4.props.keyboardShortcuts,\n              disableDoubleClickZoom: _this4.props.disableDoubleClickZoom,\n              noClear: _this4.props.noClear,\n              styles: _this4.props.styles\n            });\n\n            Object.keys(mapConfig).forEach(function (key) {\n              if (!mapConfig[key]) {\n                delete mapConfig[key];\n              }\n            });\n\n            _this4.map = new maps.Map(node, mapConfig);\n\n            evtNames.forEach(function (e) {\n              _this4.listeners[e] = _this4.map.addListener(e, _this4.handleEvent(e));\n            });\n            maps.event.trigger(_this4.map, 'ready');\n            _this4.forceUpdate();\n          })();\n        }\n      }\n    }, {\n      key: 'handleEvent',\n      value: function handleEvent(evtName) {\n        var _this5 = this;\n\n        var timeout = void 0;\n        var handlerName = 'on' + (0, _String.camelize)(evtName);\n\n        return function (e) {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = null;\n          }\n          timeout = setTimeout(function () {\n            if (_this5.props[handlerName]) {\n              _this5.props[handlerName](_this5.props, _this5.map, e);\n            }\n          }, 0);\n        };\n      }\n    }, {\n      key: 'recenterMap',\n      value: function recenterMap() {\n        var map = this.map;\n\n        var google = this.props.google;\n\n        var maps = google.maps;\n\n        if (!google) return;\n\n        if (map) {\n          var center = this.state.currentLocation;\n          if (!(center instanceof google.maps.LatLng)) {\n            center = new google.maps.LatLng(center.lat, center.lng);\n          }\n          // map.panTo(center)\n          map.setCenter(center);\n          maps.event.trigger(map, 'recenter');\n        }\n      }\n    }, {\n      key: 'restyleMap',\n      value: function restyleMap() {\n        if (this.map) {\n          var google = this.props.google;\n\n          google.maps.event.trigger(this.map, 'resize');\n        }\n      }\n    }, {\n      key: 'renderChildren',\n      value: function renderChildren() {\n        var _this6 = this;\n\n        var children = this.props.children;\n\n\n        if (!children) return;\n\n        return _react2.default.Children.map(children, function (c) {\n          return _react2.default.cloneElement(c, {\n            map: _this6.map,\n            google: _this6.props.google,\n            mapCenter: _this6.state.currentLocation\n          });\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this7 = this;\n\n        var style = Object.assign({}, mapStyles.map, this.props.style, {\n          display: this.props.visible ? 'inherit' : 'none'\n        });\n\n        var containerStyles = Object.assign({}, mapStyles.container, this.props.containerStyle);\n\n        return _react2.default.createElement(\n          'div',\n          {\n            style: containerStyles,\n            className: this.props.className },\n          _react2.default.createElement(\n            'div',\n            { style: style, ref: function ref(map) {\n                return _this7._mapRef = map;\n              } },\n            'Loading map...'\n          ),\n          this.renderChildren()\n        );\n      }\n    }]);\n\n    return Map;\n  }(_react2.default.Component);\n\n  ;\n\n  Map.propTypes = {\n    google: _react.PropTypes.object,\n    zoom: _react.PropTypes.number,\n    centerAroundCurrentLocation: _react.PropTypes.bool,\n    center: _react.PropTypes.object,\n    initialCenter: _react.PropTypes.object,\n    className: _react.PropTypes.string,\n    style: _react.PropTypes.object,\n    containerStyle: _react.PropTypes.object,\n    visible: _react.PropTypes.bool,\n    mapType: _react.PropTypes.string,\n    maxZoom: _react.PropTypes.number,\n    minZoom: _react.PropTypes.number,\n    clickableIcons: _react.PropTypes.bool,\n    disableDefaultUI: _react.PropTypes.bool,\n    zoomControl: _react.PropTypes.bool,\n    mapTypeControl: _react.PropTypes.bool,\n    scaleControl: _react.PropTypes.bool,\n    streetViewControl: _react.PropTypes.bool,\n    panControl: _react.PropTypes.bool,\n    rotateControl: _react.PropTypes.bool,\n    scrollwheel: _react.PropTypes.bool,\n    draggable: _react.PropTypes.bool,\n    keyboardShortcuts: _react.PropTypes.bool,\n    disableDoubleClickZoom: _react.PropTypes.bool,\n    noClear: _react.PropTypes.bool,\n    styles: _react.PropTypes.array\n  };\n\n  evtNames.forEach(function (e) {\n    return Map.propTypes[(0, _String.camelize)(e)] = _react.PropTypes.func;\n  });\n\n  Map.defaultProps = {\n    zoom: 14,\n    initialCenter: {\n      lat: 49.2827,\n      lng: -123.1207\n    },\n    center: {},\n    centerAroundCurrentLocation: false,\n    style: {},\n    containerStyle: {},\n    visible: true\n  };\n\n  exports.default = Map;\n});\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/google-maps-react/dist/index.js\n// module id = 470\n// module chunks = 0\n//# sourceURL=webpack:///./~/google-maps-react/dist/index.js?");

/***/ })

})